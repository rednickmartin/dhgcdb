@model DHGCDB.Models.Person

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Client Account Name</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsPrimary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsPrimary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsPrimary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<h2>Individual Products</h2>

@{var firstIndividualProduct = Model.PersonProducts.FirstOrDefault();}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => firstIndividualProduct.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => firstIndividualProduct.BusinessType)
        </th>
        <th></th>
    </tr>

    @foreach(var individualProduct in Model.PersonProducts) {
    <tr>
        <td>
            @Html.DisplayFor(model => individualProduct.Name)
        </td>
        <td>
            @Html.DisplayFor(model => individualProduct.BusinessType.Name)
        </td>
        <td>@Html.ActionLink("Edit", "EditIndividualProduct", "Client", new { id = Model.ID, subid = individualProduct.ID }, new { }) </td>
    </tr>
    }

</table>



<div>
    @Html.ActionLink("Add new attitude to risk", "AddPersonAttitudeToRisk", new { ID = Model.ID })
</div>

<h2>Current Attitude To Risk</h2>

@{ var allCurrentAttitudeToRisk = Model.AllCurrentAttitudeToRisk; }

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => allCurrentAttitudeToRisk.FirstOrDefault().AttitudeToRiskCategory.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => allCurrentAttitudeToRisk.FirstOrDefault().FromDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => allCurrentAttitudeToRisk.FirstOrDefault().AttitudeToRisk.Name)
        </th>
    </tr>

    @foreach(var item in allCurrentAttitudeToRisk) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.AttitudeToRiskCategory.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FromDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AttitudeToRisk.Name)
        </td>
    </tr>
    };

</table>

<h2>Previous Attitude To Risk</h2>

@{ var allPreviousAttitudeToRisk = Model.PreviousAttitudeToRisk; }

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => allPreviousAttitudeToRisk.FirstOrDefault().AttitudeToRiskCategory.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => allPreviousAttitudeToRisk.FirstOrDefault().FromDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => allPreviousAttitudeToRisk.FirstOrDefault().AttitudeToRisk.Name)
        </th>
    </tr>

    @foreach(var item in allPreviousAttitudeToRisk) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.AttitudeToRiskCategory.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FromDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AttitudeToRisk.Name)
        </td>
    </tr>
    };

</table>


<div>
    @Html.ActionLink("Back to Client Detail", "Details", new { ID = Model.Client.ID})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
