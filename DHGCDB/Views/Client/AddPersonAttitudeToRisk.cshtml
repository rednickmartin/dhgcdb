@model DHGCDB.ViewModels.PersonsAttitudeToRiskForView

@{
    ViewBag.Title = "Add Persons Attitude To Risk";
}

<h2>Add Persons Attitude To Risk</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Add Persons Attitude To Risk</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttitudeToRiskCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AttitudeToRiskCategory, new SelectList(ViewBag.AttitudeToRiskCategoryList, "Key", "Value"), "Please select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AttitudeToRiskCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttitudeToRisk, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AttitudeToRisk, new SelectList(ViewBag.AttitudeToRiskList, "Key", "Value"), "Please select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AttitudeToRisk, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Individual", "Detail", new { ID = ViewContext.RouteData.Values["id"] } )
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
