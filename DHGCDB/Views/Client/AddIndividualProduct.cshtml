@model DHGCDB.ViewModels.ProductForView

@{
    ViewBag.Title = "Add Individual Product";
}

<h2>Add Individual Product</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
  
    @Html.Hidden("PersonID", ViewContext.RouteData.Values["id"])

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BusinessType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BusinessType, new SelectList(ViewBag.BusinessTypeList, "Key", "Value"), "Please select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BusinessType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AttitudeToRiskCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AttitudeToRiskCategory, new SelectList(ViewBag.AttitudeToRiskCategoryList, "Key", "Value"), "Please select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AttitudeToRiskCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Individual", "EditIndividual", new { ID = ViewContext.RouteData.Values["id"] } )
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
