@model DHGCDB.ViewModels.PersonReviewForView

@{
    ViewBag.Title = "Create";
}

<h2>Create Review for @ViewBag.PersonName</h2>

<h3>Attitude To Risk Review</h3>

<h4>Current Attitude To Risk</h4>

@{IEnumerable<DHGCDB.Models.PersonsAttitudeToRisk> allCurrentAttitudeToRisk = ViewBag.AllCurrentAttitudeToRisk; }

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => allCurrentAttitudeToRisk.FirstOrDefault().AttitudeToRiskCategory.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => allCurrentAttitudeToRisk.FirstOrDefault().FromDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => allCurrentAttitudeToRisk.FirstOrDefault().AttitudeToRisk.Name)
        </th>
    </tr>

    @foreach(var item in allCurrentAttitudeToRisk) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.AttitudeToRiskCategory.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FromDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AttitudeToRisk.Name)
        </td>
    </tr>
    };

</table>




@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Review</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.AboveOrBelowOutput, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AboveOrBelowOutput, new SelectList(ViewBag.AboveOrBelowOutputList, "Key", "Value"), "Please select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AboveOrBelowOutput, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsATRChanging, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsATRChanging, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsATRChanging, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
<!--    @Html.ActionLink("Back to Client Details", "Details", "Client", new { ID = ViewContext.RouteData.Values["id"] }, new { } ) -->
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
