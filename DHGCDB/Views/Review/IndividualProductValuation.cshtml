@model DHGCDB.ViewModels.ProductValuationForView

@{
    ViewBag.Title = "Individual Product Valuation";
}

<h2>Individual Product Valuation for @ViewBag.PersonName - @ViewBag.ProductName</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
            </div>
        </div>

        @if(ViewBag.HasAssetMix) {

        <div class="form-group">
            @Html.LabelFor(model => model.AssetMix, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AssetMix, new SelectList(ViewBag.FundSelectionList, "Key", "Value"), "Please select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AssetMix, "", new { @class = "text-danger" })
            </div>
        </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@{IEnumerable<DHGCDB.Models.ProductValuation> valuations = ViewBag.PreviousValuations; }

@if(valuations.Any()) {
<div>
    <h3>Previous Valuations</h3>

    <table class="table">
        <tr>
            <th>Date of valuation</th>
            <th>Valuation</th>
            <th>Asset Mix at time of valuation</th>
        </tr>

        @foreach(var valuation in valuations) {
          string assetMixName = valuation.AssetMix == null ? "" : valuation.AssetMix.Name;

        <tr>
            <td>
                @Html.DisplayFor(model => valuation.Date)
            </td>
            <td>
                @Html.DisplayFor(model => valuation.Value)
            </td>
            <td>
                @Html.DisplayFor(model => assetMixName )
            </td>
        </tr>
        }

    </table>

</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
